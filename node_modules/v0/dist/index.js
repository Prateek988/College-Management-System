#!/usr/bin/env node
import{Command as Xt}from"commander";import{existsSync as re,promises as Le}from"fs";import T from"path";import ve from"path";import{createMatchPath as Xe}from"tsconfig-paths";async function me(e,o){return Xe(o.absoluteBaseUrl,o.paths)(e,void 0,()=>!0,[".ts",".tsx"])}import{cosmiconfig as qe}from"cosmiconfig";import{loadConfig as Ye}from"tsconfig-paths";import*as f from"zod";var He=qe("components",{searchPlaces:["components.json"]}),Ce=f.object({$schema:f.string().optional(),style:f.string(),rsc:f.coerce.boolean().default(!1),tsx:f.coerce.boolean().default(!0),tailwind:f.object({config:f.string(),css:f.string(),baseColor:f.string(),cssVariables:f.boolean().default(!0)}),aliases:f.object({components:f.string(),utils:f.string()})}).strict(),Ze=Ce.extend({resolvedPaths:f.object({tailwindConfig:f.string(),tailwindCss:f.string(),utils:f.string(),components:f.string()})});async function Se(e){let o=await Qe(e);return o?await q(e,o):null}async function q(e,o){let t=await Ye(e);if(t.resultType==="failed")throw new Error(`Failed to load tsconfig.json. ${t.message??""}`.trim());return Ze.parse({...o,resolvedPaths:{tailwindConfig:ve.resolve(e,o.tailwind.config),tailwindCss:ve.resolve(e,o.tailwind.css),utils:await me(o.aliases.utils,t),components:await me(o.aliases.components,t)}})}async function Qe(e){try{let o=await He.search(e);return o?Ce.parse(o.config):null}catch{throw new Error(`Invalid configuration found in ${e}/components.json.`)}}import{detect as et}from"@antfu/ni";async function b(e,{withFallback:o}={withFallback:!1}){let t=await et({programmatic:!0,cwd:e});if(t==="yarn@berry")return"yarn";if(t==="pnpm@6")return"pnpm";if(t==="bun")return"bun";if(!o)return t??"npm";let r=process.env.npm_config_user_agent||"";return r.startsWith("yarn")?"yarn":r.startsWith("pnpm")?"pnpm":r.startsWith("bun")?"bun":"npm"}import H from"chalk";var n={log(...e){console.log(...e)},error(...e){console.log(H.red(...e))},warn(...e){console.log(H.yellow(...e))},info(...e){console.log(H.cyan(...e))},success(...e){console.log(H.green(...e))},break(){console.log("")}};function j(e){typeof e=="string"&&(n.error(e),process.exit(1)),e instanceof Error&&(n.error(e.message),process.exit(1)),n.error("Something went wrong. Please try again."),process.exit(1)}import ot from"path";import*as a from"zod";var je=a.object({name:a.string(),dependencies:a.array(a.string()).optional(),registryDependencies:a.array(a.string()).optional(),files:a.array(a.string()),type:a.enum(["components:ui","components:component","components:example"]),images:a.array(a.string()).optional(),themeId:a.string().optional()}),Te=a.array(je),tt=je.extend({files:a.array(a.object({name:a.string(),content:a.string()}))}),Z=a.array(tt),rt=a.array(a.object({name:a.string(),label:a.string()})),Ie=a.object({inlineColors:a.object({light:a.record(a.string(),a.string()),dark:a.record(a.string(),a.string())}),cssVars:a.object({light:a.record(a.string(),a.string()),dark:a.record(a.string(),a.string())}),inlineColorsTemplate:a.string(),cssVarsTemplate:a.string()});import{HttpsProxyAgent as nt}from"https-proxy-agent";import it from"node-fetch";var Re=process.env.COMPONENTS_REGISTRY_URL??"https://ui.shadcn.com",st=process.env.https_proxy?new nt(process.env.https_proxy):void 0;async function Ee(){try{let[e]=await de(["index.json"]);return Te.parse(e)}catch{throw new Error("Failed to fetch components from registry.")}}async function M(e){try{let[o]=await de([`colors/${e}.json`]);return Ie.parse(o)}catch{throw new Error("Failed to fetch base color from registry.")}}async function le(e,o){let t=[];for(let r of o){let i=e.find(c=>c.name===r);if(i&&(t.push(i),i.registryDependencies)){let c=await le(e,i.registryDependencies);t.push(...c)}}return t.filter((r,i,c)=>c.findIndex(s=>s.name===r.name)===i)}async function be(e,o){try{let t=o.map(i=>`styles/${e}/${i.name}.json`),r=await de(t);return Z.parse(r)}catch{throw new Error("Failed to fetch tree from registry.")}}async function fe(e,o,t){if(t&&o.type!=="components:ui")return t;let[r,i]=o.type.split(":");return r in e.resolvedPaths?ot.join(e.resolvedPaths[r],i):null}async function de(e){try{return await Promise.all(e.map(async t=>await(await it(`${Re}/registry/${t}`,{agent:st})).json()))}catch{throw new Error(`Failed to fetch registry from ${Re}.`)}}import{HttpsProxyAgent as at}from"https-proxy-agent";import Pe from"node-fetch";import{createWriteStream as ct}from"fs";var ze=process.env.EXTERNAL_REGISTRY_URL??"https://v0.dev",pt=process.env.https_proxy?new at(process.env.https_proxy):void 0;async function ke(e,o){try{let t=await mt(e,o);return Z.parse(t)}catch(t){j(t)}}async function mt(e,o){try{return await Promise.all(e.map(async r=>{let i=new URL(`${ze}/api/r/${r}`);o&&i.searchParams.set("token",o);let c=await Pe(i,{agent:pt});if(c.status===404)throw new Error(`Component ${r} not found.`);if(c.status===401)throw o?new Error(`Token is expired or invalid. Visit https://v0.dev/t/${r} to get a new one.`):new Error(`This is a private component. Visit https://v0.dev/t/${r} to get a CLI token.`);if(c.status===200)return await c.json();throw new Error(`Failed to fetch component ${r}. ${c.statusText}`)}))}catch(t){j(t)}}async function Ne(e,o){let t=new URL(`${ze}${e}`),r=ct(o,{flags:"w"}),i=await Pe(t.toString());if(!i.body)throw new Error(`Failed to download image from ${t}`);await i.body.pipe(r)}import{promises as xt}from"fs";import{tmpdir as vt}from"os";import _e from"path";import{SyntaxKind as ge}from"ts-morph";var Oe=async({sourceFile:e,config:o,baseColor:t})=>(o.tailwind?.cssVariables||!t?.inlineColors||e.getDescendantsOfKind(ge.StringLiteral).forEach(r=>{let i=r.getText(),c=r.getPreviousSiblings().find(s=>s.getKind()===ge.Identifier)?.getText();if(!(r.getParent()?.getKind()===ge.JsxAttribute&&c&&c!=="className")&&i){let s=dt(i.replace(/"/g,"").replace(/'/g,""),t.inlineColors);r.replaceWithText(`"${s.trim()}"`)}}),e);function lt(e){if(!e.includes("/")&&!e.includes(":"))return[null,e,null];let o=[],[t,r]=e.split("/");if(!t.includes(":"))return[null,t,r];let i=t.split(":"),c=i.pop(),s=i.join(":");return o.push(s??null,c??null,r??null),o}var ft=["bg-","text-","border-","ring-offset-","ring-","fill-","stroke-"];function dt(e,o){e.includes(" border ")&&(e=e.replace(" border "," border border-border "));let t=e.split(" "),r=new Set,i=new Set;for(let c of t){let[s,p,m]=lt(c),y=ft.find(S=>p?.startsWith(S));if(!y){r.has(c)||r.add(c);continue}let x=p?.replace(y,"");if(x&&x in o.light){r.add([s,`${y}${o.light[x]}`].filter(Boolean).join(":")+(m?`/${m}`:"")),i.add(["dark",s,`${y}${o.dark[x]}`].filter(Boolean).join(":")+(m?`/${m}`:""));continue}r.has(c)||r.add(c)}return[...Array.from(r),...Array.from(i)].join(" ").trim()}var $e=async({sourceFile:e,config:o})=>{let t=e.getImportDeclarations();for(let r of t){let i=r.getModuleSpecifierValue();i.startsWith("@/components/")&&r.setModuleSpecifier(i.replace(/^@\/components/,o.aliases.components)),i.startsWith("@/registry/")&&r.setModuleSpecifier(i.replace(/^@\/registry\/[^/]+/,o.aliases.components)),i=="@/lib/utils"&&r.getNamedImports().find(p=>p.getName()==="cn")&&r.setModuleSpecifier(i.replace(/^@\/lib\/utils/,o.aliases.utils))}return e};import{transformFromAstSync as gt}from"@babel/core";import{parse as ut}from"@babel/parser";import ht from"@babel/plugin-transform-typescript";import*as Q from"recast";var yt={sourceType:"module",allowImportExportEverywhere:!0,allowReturnOutsideFunction:!0,startLine:1,tokens:!0,plugins:["asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","classStaticBlock","decimal","decorators-legacy","doExpressions","dynamicImport","exportDefaultFrom","exportNamespaceFrom","functionBind","functionSent","importAssertions","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{proposal:"minimal"}],["recordAndTuple",{syntaxType:"hash"}],"throwExpressions","topLevelAwait","v8intrinsic","typescript","jsx"]},Fe=async({sourceFile:e,config:o})=>{let t=e.getFullText();if(o.tsx)return t;let r=Q.parse(t,{parser:{parse:c=>ut(c,yt)}}),i=gt(r,t,{cloneInputAst:!1,code:!1,ast:!0,plugins:[ht],configFile:!1});if(!i||!i.ast)throw new Error("Failed to transform JSX");return Q.print(i.ast).code};import{SyntaxKind as wt}from"ts-morph";var Ae=async({sourceFile:e,config:o})=>{if(o.rsc)return e;let t=e.getFirstChildByKind(wt.ExpressionStatement);return t?.getText()==='"use client"'&&t.remove(),e};import{Project as Ct,ScriptKind as St}from"ts-morph";var jt=new Ct({compilerOptions:{}});async function Tt(e){let o=await xt.mkdtemp(_e.join(vt(),"shadcn-"));return _e.join(o,e)}async function L(e,o=[$e,Ae,Oe]){let t=await Tt(e.filename),r=jt.createSourceFile(t,e.raw,{scriptKind:St.TSX});for(let i of o)i({sourceFile:r,...e});return await Fe({sourceFile:r,...e})}import C from"chalk";import{Command as It}from"commander";import{execa as Rt}from"execa";import Et from"ora";import De from"prompts";import*as w from"zod";function Me(e,o){return e.replace(/export default function Component/g,`export function ${o}`)}import O from"path";import z from"fs-extra";var P="0",D="2",W="3",U="4",G="5";async function B(e){return z.existsSync(e)?z.existsSync(O.resolve(e,"components.json"))?D:z.existsSync(O.resolve(e,"package.json"))?!z.existsSync(O.resolve(e,"next.config.js"))&&!z.existsSync(O.resolve(e,"next.config.ts"))&&!z.existsSync(O.resolve(e,"next.config.mjs"))?U:!z.existsSync(O.resolve(e,"tailwind.config.js"))&&!z.existsSync(O.resolve(e,"tailwind.config.ts"))?G:null:W:P}function te(e){switch(e){case"npm":return"npx create-next-app";case"yarn":return"npx create-next-app";default:return`${e} create next-app`}}function V(e,o){switch(e){case"pnpm":return`pnpm dlx ${o}`;case"bun":return`bunx --bun ${o}`;default:return`npx ${o}`}}var bt=w.object({yes:w.boolean(),overwrite:w.boolean(),cwd:w.string(),path:w.string().optional(),name:w.string().optional(),token:w.string().optional(),silent:w.boolean()}),We=new It().name("add").alias("i").description("add a component to your project").argument("id","the component id to add").option("-n, --name <name>","the filename of the component to add.").option("-t, --token <token>","unique token to authenticate for private components.").option("-y, --yes","skip confirmation prompt.",!0).option("-o, --overwrite","overwrite existing files.",!1).option("-c, --cwd <cwd>","the working directory. defaults to the current directory.",process.cwd()).option("-p, --path <path>","the path to add the component to.").option("-s, --silent","silence output.",!1).action(async(e,o)=>{await ue(e,o)});async function ue(e,o){try{let t=bt.parse({id:e,...o}),r=T.resolve(t.cwd),i=await b(r);if(await B(r)===P&&(n.error(`The path ${r} does not exist. Make sure the path is correct.`),process.exit(1)),!re(T.resolve(r,"components.json"))){n.info(`Configuration is missing. Run the following command to create a ${C.green("components.json")} file.`);let l=V(i,"v0@latest init");n.info(""),n.info(`   ${C.green(l)}`),n.info(""),n.info(`When done, run ${C.green("v0 add <component-id>")} to add the component to your project.`),n.info(""),process.exit(1)}let s=await Se(r);s||(n.error("Failed to read project configuration. Make sure your project is a Next.js project."),process.exit(1));let[p]=await ke([e],t.token)||[];s.tailwind.cssVariables===!1&&p.themeId&&(n.warn(`This component is using the ${C.cyan(p.themeId)} theme, which requires ${C.cyan("cssVariables")} to be set to ${C.cyan("true")} in your ${C.cyan("components.json")} file. Please update your ${C.cyan("components.json")} file and try again.`),n.info(""),process.exit(1)),e||(n.warn("No component id provided. Exiting."),process.exit(0));let m=t.name;if(!m){let{name:l}=await De({type:"text",name:"name",message:`What should we name ${C.cyan("the component")}?`,initial:"Component",format:u=>u.trim(),validate:u=>u.length>128?"Name should be less than 128 characters.":!0});m=l}m||(n.warn("No component name provided."),process.exit(0));let y=m.replace(/([a-z0-9])([A-Z])/g,"$1-$2").toLowerCase(),x=`${y}.${s.tsx?"tsx":"jsx"}`;p.name=y,p.files[0].name=x,p.files[0].content=Me(p.files[0].content,m);let S=await Ee(),k=await le(S,p.registryDependencies??[]),N=await be(s.style,k),R=[];for(let l of N){if(l.type!=="components:ui")continue;let u=await fe(s,l,t.path?T.resolve(r,t.path):void 0);if(!u)continue;l.files.filter(h=>re(T.resolve(u,h.name))).length&&R.push(l.name)}let g=N.filter(l=>!R.includes(l.name));if(g.push(p),g.length||(n.warn("Invalid component dependencies found. Exiting."),process.exit(0)),!t.yes){let{proceed:l}=await De({type:"confirm",name:"proceed",message:"Ready to add components and dependencies. Proceed?",initial:!0});l||process.exit(0)}let v=await M(s.tailwind.baseColor),E=T.resolve(r,"public"),A=Et("Adding components...");t.silent||A.start();for(let l of g){A.text=`Adding ${l.type==="components:component"?"component":l.name}...`;let u=await fe(s,l,t.path?T.resolve(r,t.path):void 0);if(u){u=u.replace(/\/component$/,""),re(u)||await Le.mkdir(u,{recursive:!0});for(let d of l.files){let h=T.resolve(u,d.name),_=await L({filename:d.name,raw:d.content,config:s,baseColor:v});s.tsx||(h=h.replace(/\.tsx$/,".jsx")),await Le.writeFile(h,_)}if(l.dependencies?.length&&await Rt(i,["add",...l.dependencies],{cwd:r}),l.images?.length)for(let d of l.images){if(!d.startsWith("/"))continue;let h=T.join(E,T.basename(d));re(h)||await Ne(d,h)}}}t.silent||(p.themeId?(A.succeed("Done."),n.info(""),n.info("The component has been added to your project."),n.info(`To install theme colors and fonts, visit ${C.cyan(`https://v0.dev/t/${e}`)} and follow the instructions under the Code tab.`),n.info("")):A.succeed("Done."))}catch(t){console.log({error:t}),j(t)}}import{existsSync as J}from"fs";import I from"path";import Ue,{pathExists as Pt}from"fs-extra";async function oe(e){let o=await zt(e);if(!o)return null;let t=o.srcDir?"src/":"";return{$schema:"https://ui.shadcn.com/schema.json",style:"default",rsc:o.appDir,tsx:o.tsx,tailwind:{config:o.tailwindConfig,css:o.appDir?`${t}app/globals.css`:`${t}styles/globals.css`,baseColor:"gray",cssVariables:!0},aliases:{utils:`${o.pathPrefix}/lib/utils`,components:`${o.pathPrefix}/components`}}}async function zt(e){if(!(J(I.resolve(e,"next.config.js"))||J(I.resolve(e,"next.config.ts"))||J(I.resolve(e,"next.config.mjs"))))return null;let t=await kt(e);if(!t)return null;let r=J(I.resolve(e,"src")),i=J(I.resolve(e,r?"src/app":"app")),c=t.compilerOptions?.paths,s=Object.keys(c).find(p=>p.endsWith("/*"))?.slice(0,-2);return{srcDir:r,appDir:i,pathPrefix:s,tsx:await Ge(e),tailwindConfig:J(I.resolve(e,"tailwind.config.ts"))?"tailwind.config.ts":"tailwind.config.js"}}async function Ge(e){return await Pt(I.resolve(e,"tsconfig.json"))}async function kt(e){try{if(await Ge(e)){let r=I.resolve(e,"tsconfig.json"),i=await Ue.readJSON(r);if(!i)throw new Error("tsconfig.json is missing");return i}let t=I.resolve(e,"jsconfig.json");if(t){let r=await Ue.readJSON(t);if(!r)throw new Error("jsconfig.json is missing");return r}}catch{return null}}var ne=`import { type ClassValue, clsx } from "clsx"
import { twMerge } from "tailwind-merge"

export function cn(...inputs: ClassValue[]) {
  return twMerge(clsx(inputs))
}
`,ie=`import { clsx } from "clsx"
import { twMerge } from "tailwind-merge"

export function cn(...inputs) {
  return twMerge(clsx(inputs))
}
`;import{SyntaxKind as he}from"ts-morph";var Nt={colors:{border:"hsl(var(--border))",input:"hsl(var(--input))",ring:"hsl(var(--ring))",background:"hsl(var(--background))",foreground:"hsl(var(--foreground))",primary:{DEFAULT:"hsl(var(--primary))",foreground:"hsl(var(--primary-foreground))"},secondary:{DEFAULT:"hsl(var(--secondary))",foreground:"hsl(var(--secondary-foreground))"},destructive:{DEFAULT:"hsl(var(--destructive))",foreground:"hsl(var(--destructive-foreground))"},muted:{DEFAULT:"hsl(var(--muted))",foreground:"hsl(var(--muted-foreground))"},accent:{DEFAULT:"hsl(var(--accent))",foreground:"hsl(var(--accent-foreground))"},popover:{DEFAULT:"hsl(var(--popover))",foreground:"hsl(var(--popover-foreground))"},card:{DEFAULT:"hsl(var(--card))",foreground:"hsl(var(--card-foreground))"}},borderRadius:{lg:"var(--radius)",md:"calc(var(--radius) - 2px)",sm:"calc(var(--radius) - 4px)"},keyframes:{"accordion-down":{from:{height:"0"},to:{height:"var(--radix-accordion-content-height)"}},"accordion-up":{from:{height:"var(--radix-accordion-content-height)"},to:{height:"0"}}}},se=async({sourceFile:e,config:o})=>{let t=e.getFirstDescendantByKind(he.ObjectLiteralExpression),r=t?.getProperty("plugins");r&&r.getFirstDescendantByKind(he.ArrayLiteralExpression)?.addElement('require("tailwindcss-animate")');let i=t?.getProperty("theme");i||(i=t?.addPropertyAssignment({name:"theme",initializer:"{}"}));let c=i.getFirstDescendantByKind(he.ObjectLiteralExpression);for(let[s,p]of Object.entries(Nt))if(!c?.getProperty(s))c?.addPropertyAssignment({name:s,initializer:JSON.stringify(p,null,2)});else throw new Error("property-exists");return e};import ye from"chalk";import{Command as Ot}from"commander";import{execa as $t}from"execa";import{existsSync as Ft,promises as K}from"fs";import we from"ora";import ae from"path";import*as X from"zod";var xe=["tailwindcss-animate","class-variance-authority","clsx","tailwind-merge"],At=X.object({cwd:X.string(),yes:X.boolean()}),Ve=new Ot().name("init").description("initialize your project and install dependencies").option("-y, --yes","skip confirmation prompt.",!1).option("-c, --cwd <cwd>","the working directory. defaults to the current directory.",process.cwd()).action(async e=>{await _t(e)});async function _t(e){try{let o=At.parse(e),t=ae.resolve(o.cwd),r=await b(t,{withFallback:!0}),i=await B(t);if(i===P&&(n.error(`The path ${t} does not exist. Make sure the path is correct.`),process.exit(1)),i===D&&(n.error(`The path ${t} already contains a components.json file. Remove this file and try again.`),process.exit(1)),i===U&&(n.warn("The v0 cli only supports Next.js projects for now."),n.warn("If you're using a different framework, you can copy and paste the generated code into your app."),n.warn(""),process.exit(1)),i===G&&(n.warn("Tailwind CSS is not installed. Make sure to install Tailwind CSS in your project first."),n.warn("Visit https://tailwindcss.com/docs/guides/nextjs to get started."),n.warn(""),process.exit(1)),i===W){n.error("Looks like you're trying to initialize an empty project."),n.error("Create a new Next.js project first and then run the init command.");let g=te(r),v=V(r,"v0@latest init");n.info(""),n.info(` ${ye.green(g)}`),n.info(` ${ye.green(v)}`),n.info(""),process.exit(1)}let c=await oe(t);c||(n.error("Failed to read project configuration. Make sure your project is a Next.js project."),process.exit(1));let s=await q(t,c);n.info("");let p=we("Writing components.json...").start(),m=ae.resolve(t,"components.json");await K.writeFile(m,JSON.stringify(c,null,2),"utf8"),p.succeed(),p=we("Initializing project...").start();for(let[g,v]of Object.entries(s.resolvedPaths)){let E=ae.extname(v)?ae.dirname(v):v;g==="utils"&&v.endsWith("/utils")&&(E=E.replace(/\/utils$/,"")),Ft(E)||await K.mkdir(E,{recursive:!0})}let y=s.tsx?"ts":"js",x=await K.readFile(s.resolvedPaths.tailwindConfig,"utf8"),S;try{S=await L({filename:s.resolvedPaths.tailwindConfig,raw:x,config:s},[se])}catch(g){if(g instanceof Error&&g.message==="property-exists")n.error("v0 now requires tailwind modifications it was unable to perform automatically.\nPlease re-run the `v0 init` command to reset your tailwind configuration."),process.exit(1);else throw g}await K.writeFile(s.resolvedPaths.tailwindConfig,S,"utf8");let k=await M(s.tailwind.baseColor);k&&await K.writeFile(s.resolvedPaths.tailwindCss,s.tailwind.cssVariables?k.cssVarsTemplate:k.inlineColorsTemplate,"utf8"),await K.writeFile(`${s.resolvedPaths.utils}.${y}`,y==="ts"?ne:ie,"utf8"),p.succeed();let N=we("Installing dependencies...").start(),R=[...xe,"@radix-ui/react-icons","lucide-react"];await $t(r,[r==="npm"?"install":"add",...R],{cwd:t}),N.succeed(),n.info(""),n.info(`${ye.green("Success!")} Project initialization completed. You can now starting adding components.`),n.info("")}catch(o){j(o)}}import ce from"chalk";import{Command as Gt}from"commander";import{execa as Bt}from"execa";import{existsSync as Vt,promises as $}from"fs";import pe from"ora";import Y from"path";import*as F from"zod";import{execa as Mt}from"execa";import Lt from"prompts";import Dt from"ora";import Wt from"path";import Ut from"fs-extra";async function Je(e){let o=await b(e),{name:t}=await Lt({type:"text",name:"name",message:"What is your project named?",initial:"v0-app",format:s=>s.trim(),validate:s=>s.length>128?"Name should be less than 128 characters.":!0}),r=`${e}/${t}`;Ut.existsSync(Wt.resolve(e,t,"package.json"))&&(n.warn(""),n.warn(`A project with the name ${t} already exists.`),n.warn("Please choose a different name and try again."),n.warn(""),process.exit(1)),n.info("");let i=Dt("Creating a new v0 project...").start(),c=["--tailwind","--eslint","--typescript","--app","--no-src-dir","--no-import-alias",`--use-${o}`];return await Mt("npx",["create-next-app",r,"--silent",...c],{cwd:e}),i.succeed(),{projectPath:r,projectName:t}}var Jt=F.object({cwd:F.string(),yes:F.boolean(),token:F.string().optional()}),Ke=new Gt().name("create").description("(experimental) create a new Next.js project with component id").argument("id","the component id to add").option("-y, --yes","skip confirmation prompt.",!1).option("-c, --cwd <cwd>","the working directory. defaults to the current directory.",process.cwd()).option("-t, --token <token>","unique token to authenticate for private components.").action(async(e,o)=>{await Kt(e,o)});async function Kt(e,o){try{let t=Jt.parse(o),r=Y.resolve(t.cwd),i=await b(r,{withFallback:!0}),{projectPath:c}=await Je(r);r=c,process.chdir(r);let s=await B(r);if(s===P&&(n.error(`The path ${r} does not exist. Make sure the path is correct.`),process.exit(1)),s===D&&(n.error(`The path ${r} already contains a components.json file. Remove this file and try again.`),process.exit(1)),s===U&&(n.warn("The v0 cli only supports Next.js projects for now."),n.warn("If you're using a different framework, you can copy and paste the generated code into your app."),n.warn(""),process.exit(1)),s===G&&(n.warn("Tailwind CSS is not installed. Make sure to install Tailwind CSS in your project first."),n.warn("Visit https://tailwindcss.com/docs/guides/nextjs to get started."),n.warn(""),process.exit(1)),s===W){n.error("Looks like you're trying to initialize an empty project."),n.error("Create a new Next.js project first and then run the init command.");let d=te(i),h=V(i,"v0@latest init");n.info(""),n.info(` ${ce.green(d)}`),n.info(` ${ce.green(h)}`),n.info(""),process.exit(1)}let p=await oe(r);p||(n.error("Failed to read project configuration. Make sure your project is a Next.js project."),process.exit(1));let m=await q(r,p),y=pe("Writing components.json...").start(),x=Y.resolve(r,"components.json");await $.writeFile(x,JSON.stringify(p,null,2),"utf8"),y.succeed(),y=pe("Initializing project...").start();for(let[d,h]of Object.entries(m.resolvedPaths)){let _=Y.extname(h)?Y.dirname(h):h;d==="utils"&&h.endsWith("/utils")&&(_=_.replace(/\/utils$/,"")),Vt(_)||await $.mkdir(_,{recursive:!0})}let S=m.tsx?"ts":"js",k=await $.readFile(m.resolvedPaths.tailwindConfig,"utf8"),N;try{N=await L({filename:m.resolvedPaths.tailwindConfig,raw:k,config:m},[se])}catch(d){if(d instanceof Error&&d.message==="property-exists")n.error("v0 now requires tailwind modifications it was unable to perform automatically.\nPlease re-run the `v0 init` command to reset your tailwind configuration."),process.exit(1);else throw d}await $.writeFile(m.resolvedPaths.tailwindConfig,N,"utf8");let R=await M(m.tailwind.baseColor),g=m.tailwind.cssVariables?R.cssVarsTemplate:R.inlineColorsTemplate;g=g.trim().split(`
`).map(d=>d.trim()).join(`
`),R&&await $.writeFile(m.resolvedPaths.tailwindCss,g,"utf8"),await $.writeFile(`${m.resolvedPaths.utils}.${S}`,S==="ts"?ne:ie,"utf8"),y.succeed();let v=pe("Installing dependencies...").start(),E=[...xe,"@radix-ui/react-icons","lucide-react"];await Bt(i,[i==="npm"?"install":"add",...E],{cwd:r}),v.succeed();let A=pe("Adding components...").start();await ue(e,{cwd:r,yes:!0,overwrite:!0,name:"Component",silent:!0,token:t.token}),A.succeed();let l=Y.resolve(r,"app","page.tsx");await $.writeFile(l,`import { Component } from '@/components/component'

export default function Home() {
  return <Component />
}`,"utf8");let u=i==="npm"?"npm run dev":`${i} dev`;n.log(""),n.log(ce.green("Success! Your project is ready.")),n.log(ce.green("We've also added your component and dependencies.")),n.log(""),n.log("- To start the development server:"),n.log(""),n.log(`    cd ${r}`),n.log(`    ${u}`),n.log(""),n.log("- To deploy your project to \u25B2 Vercel:"),n.log(""),n.log(`    cd ${r}`),n.log("    vercel deploy"),n.log("")}catch(t){j(t)}}process.on("SIGINT",()=>process.exit(0));process.on("SIGTERM",()=>process.exit(0));async function qt(){let e=new Xt().name("v0").description("add components and dependencies to your project");e.addCommand(Ve).addCommand(We).addCommand(Ke),e.parse()}qt();
//# sourceMappingURL=index.js.map